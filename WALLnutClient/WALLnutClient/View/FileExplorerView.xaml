<local:BaseUserControls x:Class="WALLnutClient.FileExplorerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WALLnutClient"
             mc:Ignorable="d" Background="{x:Null}" 
             d:DesignHeight="500" d:DesignWidth="900">

    <local:BaseUserControls.Resources>

        <local:ItemsControlHeightConverter x:Key="HeightConverter"/>
        <local:LeftMarginMultiplierConverter Length="10" x:Key="lengthConverter" />

        <!-- TreeVeiw -->
        <Style TargetType="{x:Type ToggleButton}" x:Key="ExpandCollapseToggleStyle">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Width="15" Height="13" Background="Transparent">
                            <Path x:Name="ExpandPath" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,1,1,1" Fill="{TemplateBinding Background}" Data="M 4 0 L 8 4 L 4 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type local:TvTreeView}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ItemContainerStyle" Value="{DynamicResource CustomTreeViewItem}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:TvTreeView}">
                        <Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="_tv_scrollviewer_" CanContentScroll="False" Focusable="False"
                                          Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="Bd" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TreeViewItem}" x:Key="CustomTreeViewItem">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#FF585858"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <StackPanel>
                            <Border x:Name="Bd"
							        Background="{TemplateBinding Background}"
							        BorderBrush="{TemplateBinding BorderBrush}"
							        BorderThickness="{TemplateBinding BorderThickness}"
							        Padding="{TemplateBinding Padding}">
                                <Grid Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander" Style="{DynamicResource ExpandCollapseToggleStyle}"
                                                  IsChecked="{Binding DataContext.IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                                    <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                      DataContext="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch">
                                        <ContentPresenter.Content>
                                            <ContentControl>
                                                <Border>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>

                                                        <Image Name="img" Width="20" Height="20" Stretch="Fill"
                                                               Source="{Binding Path=DataContext, ElementName=PART_Header, Converter={x:Static local:HeaderToImageConverter.Instance}}"/>
                                                        <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding Path=DataContext.NodeText, ElementName=PART_Header}" Margin="5,0" />
                                                    </Grid>
                                                </Border>
                                            </ContentControl>
                                        </ContentPresenter.Content>
                                        <ContentPresenter.InputBindings>
                                            <!--Command="{Binding ClickCommand, RelativeSource={RelativeSource AncestorType={x:Type local:TvTreeView}}}"-->
                                            <MouseBinding MouseAction="LeftDoubleClick"
                                                          Command="{Binding Path=DataContext.ClickCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                                                          CommandParameter="{Binding ElementName=mainTreeView, Path=SelectedItem }"/>
                                        </ContentPresenter.InputBindings>
                                    </ContentPresenter>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Path=DataContext.SubCount, RelativeSource={RelativeSource Self}}" Value="0">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="#FF7797D1"/>
                                <Setter Property="Background" TargetName="Expander" Value="White"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#FF9D9D9D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <HierarchicalDataTemplate DataType="{x:Type local:ChildTreeNode}" ItemsSource="{Binding Path=ChildNodes}">
        </HierarchicalDataTemplate>
        <!-- /TreeView -->

    </local:BaseUserControls.Resources>


    <Grid Background="{x:Null}" Margin="0">
        <!-- TreeView -->
        <Border Margin="1" BorderBrush="LightBlue" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <local:TvTreeView VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" x:Name="mainTreeView"
                              Height="{Binding Parent.ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource HeightConverter}, ConverterParameter=1}"
                              ItemsSource="{Binding TreeNodes}">
            </local:TvTreeView>
        </Border>
    </Grid>
</local:BaseUserControls>
